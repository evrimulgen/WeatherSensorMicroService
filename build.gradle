buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
    	maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
        
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'


jar {
    baseName = 'sensors'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-amqp")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
       compile("org.springframework.cloud:spring-cloud-starter-eureka")
       compile("com.netflix.eureka:eureka-client:1.1.37")
       compile("com.netflix.hystrix:hystrix-core:1.4.14")
        compile("org.springframework.cloud:spring-cloud-starter-config")
    compile("org.codehaus.jettison.jettison:1.3.5")
	//compile("org.springframework.boot:spring-boot-starter-cloud-connectors")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

dependencyManagement {
     imports {
     	  mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Angel.SR3"      	  
          mavenBom 'org.springframework.cloud:spring-cloud-config:1.0.2.RELEASE'
          mavenBom 'org.springframework.cloud:spring-cloud-netflix:1.0.3.RELEASE'
     }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
